#!/usr/bin/env python3
"""Simple sinkhole HTTP server for AwesomeCleaner C2 endpoint."""
from http.server import HTTPServer, BaseHTTPRequestHandler
from datetime import datetime
from pathlib import Path
import json

LOG_PATH = Path("c2_sinkhole.log")

class SinkholeHandler(BaseHTTPRequestHandler):
    def _log_request(self, body: bytes):
        entry = {
            "timestamp": datetime.utcnow().isoformat() + "Z",
            "client_address": self.client_address[0],
            "client_port": self.client_address[1],
            "method": self.command,
            "path": self.path,
            "headers": {k: v for k, v in self.headers.items()},
            "body_preview": body[:2048].decode("latin1", errors="replace"),
            "body_length": len(body),
        }
        with LOG_PATH.open("a", encoding="utf-8") as log_file:
            log_file.write(json.dumps(entry, ensure_ascii=False) + "\n")

    def do_POST(self):
        length = int(self.headers.get('Content-Length', '0'))
        body = self.rfile.read(length) if length else b''
        self._log_request(body)
        self.send_response(200)
        self.send_header("Content-Type", "application/json")
        self.end_headers()
        self.wfile.write(b'{"status": "captured"}')

    def do_GET(self):
        self._log_request(b"")
        self.send_response(200)
        self.send_header("Content-Type", "text/plain")
        self.end_headers()
        self.wfile.write(b"Sinkhole active")

    def log_message(self, format, *args):
        # Suppress default stdout logging
        pass


def main():
    server_address = ("0.0.0.0", 23282)
    httpd = HTTPServer(server_address, SinkholeHandler)
    print("Sinkhole listening on http://0.0.0.0:23282 ...")
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        print("\nSinkhole shutting down")


if __name__ == "__main__":
    main()
